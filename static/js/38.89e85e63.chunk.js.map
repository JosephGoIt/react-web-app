{"version":3,"file":"static/js/38.89e85e63.chunk.js","mappings":"iLAGaA,EAAY,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAC1B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CACRC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNL,MAAOA,EACPM,UAAU,sBAGhB,C,sLCHaC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9BC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAkBpC,OACEG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE3B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAc,KACf5B,EAAAA,EAAAA,KAAA,KAAG6B,UAAU,qGAAoGF,SAAC,WAGlHD,EAAAA,EAAAA,MAAA,QAAMI,SAtBW,SAAAC,GACnBA,EAAEC,iBAGGhB,EAAMiB,OAINb,EAASa,OAKd1B,GAAS2B,EAAAA,EAAAA,IAAM,CAAElB,MAAAA,EAAOI,SAAAA,KAJtBe,EAAAA,GAAAA,QAAc,wBAJdA,EAAAA,GAAAA,QAAc,oBASlB,EAQkCN,UAAU,YAAWF,SAAA,EACjDD,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qHAAoHF,SAAA,EACjI3B,EAAAA,EAAAA,KAAA,SACE6B,UAAU,yDACVO,KAAK,QACLC,MAAOrB,EACPsB,SAAU,SAAAP,GAAC,OAAId,EAASc,EAAEQ,OAAOF,MAAM,EACvCG,YAAY,aAEdd,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUF,SAAA,EACvB3B,EAAAA,EAAAA,KAAA,SACE6B,UAAU,gEACVO,KAAMZ,EAAe,OAAS,WAC9Ba,MAAOjB,EACPkB,SAAU,SAAAP,GAAC,OAAIV,EAAYU,EAAEQ,OAAOF,MAAM,EAC1CG,YAAY,gBAGdxC,EAAAA,EAAAA,KAAA,UACEoC,KAAK,SACLK,QAAS,kBAAMhB,GAAiBD,EAAa,EAC7CK,UAAU,gGAA+FF,SAExGH,GAAexB,EAAAA,EAAAA,KAAC0C,EAAAA,IAAU,KAAM1C,EAAAA,EAAAA,KAAC2C,EAAAA,IAAK,aAI7CjB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,8DAA6DF,SAAA,EAC1E3B,EAAAA,EAAAA,KAAA,UACEoC,KAAK,SACLP,UAAU,+LACVe,SAAUnC,EAAUkB,SAEnBlB,GAAYT,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAACE,MAAM,SAAY,WAE5CC,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAG,YAAWnB,UAClB3B,EAAAA,EAAAA,KAAA,UACEoC,KAAK,SACLP,UAAU,uLACVe,SAAUnC,EAAUkB,SACrB,sBAOP3B,EAAAA,EAAAA,KAAA,OAAA2B,UACE3B,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAG,UAASnB,UAChB3B,EAAAA,EAAAA,KAAA,KAAG6B,UAAU,yGAAwGF,SAAC,oCAOhI,C","sources":["components/BtnLoader/BtnLoader.jsx","pages/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const BtnLoader = ({ color }) => {\n  return (\n    <ThreeDots\n      visible={true}\n      height=\"20\"\n      width=\"45\"\n      color={color}\n      ariaLabel=\"three-dots-loading\"\n    />\n  );\n};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../redux/auth/operations';\nimport { getIsLoading } from '../redux/auth/selectors';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BtnLoader } from 'components/BtnLoader/BtnLoader';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Check if email or password is empty\n    if (!email.trim()) {\n      toast.warning('Email is required');\n      return;\n    }\n    if (!password.trim()) {\n      toast.warning('Password is required');\n      return;\n    }\n\n    dispatch(login({ email, password }));\n  };\n\n  return (\n    <div>\n      <ToastContainer />\n      <p className=\"flex md:justify-start justify-center text-[14px] font-bold text-orange tracking-[0.56px] uppercase\">\n        Login\n      </p>\n      <form onSubmit={handleSubmit} className=\"mt-[60px]\">\n        <div className=\"flex flex-col gap-[40px] text-[14px] font-bold placeholder:text-textgray tracking-[0.56px] w-full md:max-w-[300px]\">\n          <input\n            className=\"border-b-[1px] focus:border-orange outline-0 pb-[20px]\"\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            placeholder=\"Email *\"\n          />\n          <div className=\"relative\">\n            <input\n              className=\"border-b-[1px] focus:border-orange outline-0 pb-[20px] w-full\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              placeholder=\"Password *\"\n            />\n            {/* Toggle button to show or hide password */}\n            <button\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n              className=\"absolute text-[15px] right-2 top-3 transform -translate-y-1/2 text-gray-500 hover:text-orange\"\n            >\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\n            </button>\n          </div>\n        </div>\n        <div className=\"flex md:flex-row flex-col items-center gap-[32px] mt-[60px]\">\n          <button\n            type=\"submit\"\n            className=\"flex w-[182px] py-[13px] px-[37px] bg-orange items-center justify-center rounded-[30px] shadow-[0px_4px_10px_0px_rgba(252,132,45,0.50)] text-white font-bold text-[14px] hover:bg-darkorange\"\n            disabled={isLoading}\n          >\n            {isLoading ? <BtnLoader color=\"#fff\" /> : 'Login'}\n          </button>\n          <Link to=\"/register\">\n            <button\n              type=\"button\"\n              className=\"flex w-[182px] py-[13px] px-[37px] bg-white items-center justify-center rounded-[30px] border-[2px] border-orange text-orange font-bold text-[14px] hover:bg-orange hover:text-white\"\n              disabled={isLoading}\n            >\n              Register\n            </button>\n          </Link>\n        </div>\n      </form>\n\n      <div>\n        <Link to=\"/verify\">\n          <p className=\"text-[12px] underline hover:text-orange cursor-pointer mt-[20px] flex justify-center md:justify-normal\">\n            Resend verification email\n          </p>\n        </Link>\n      </div>\n    </div>\n  );\n};"],"names":["BtnLoader","_ref","color","_jsx","ThreeDots","visible","height","width","ariaLabel","LoginForm","dispatch","useDispatch","isLoading","useSelector","getIsLoading","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","showPassword","setShowPassword","_jsxs","children","ToastContainer","className","onSubmit","e","preventDefault","trim","login","toast","type","value","onChange","target","placeholder","onClick","FaEyeSlash","FaEye","disabled","Link","to"],"sourceRoot":""}